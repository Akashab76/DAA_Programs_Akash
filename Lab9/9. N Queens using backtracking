#include <stdio.h>
#include <stdlib.h>

void displayChess(int** chBoard, int n) {
    for (int row = 0; row < n; row++) {
        for (int col = 0; col < n; col++)
            printf("%d ", chBoard[row][col]);
        printf("\n");
    }
}

int isQueenPlaceValid(int** chBoard, int n, int crntRow, int crntCol) {
    for (int i = 0; i < crntCol; i++)
        if (chBoard[crntRow][i])
            return 0;

    for (int i = crntRow, j = crntCol; i >= 0 && j >= 0; i--, j--)
        if (chBoard[i][j])
            return 0;

    for (int i = crntRow, j = crntCol; j >= 0 && i < n; i++, j--)
        if (chBoard[i][j])
            return 0;

    return 1;
}

int solveProblem(int** chBoard, int n, int crntCol) {
    if (crntCol >= n)
        return 1;

    for (int i = 0; i < n; i++) {
        if (isQueenPlaceValid(chBoard, n, i, crntCol)) {
            chBoard[i][crntCol] = 1;

            if (solveProblem(chBoard, n, crntCol + 1))
                return 1;

            chBoard[i][crntCol] = 0;
        }
    }
    return 0;
}

int displaySolution(int n) {

    int** chBoard = (int**)malloc(n * sizeof(int*));
    for (int i = 0; i < n; i++)
        chBoard[i] = (int*)calloc(n, sizeof(int)); 

    if (solveProblem(chBoard, n, 0) == 0) {
        printf("Solution does not exist\n");
        return 0;
    }

    displayChess(chBoard, n);

    for (int i = 0; i < n; i++)
        free(chBoard[i]);
    free(chBoard);

    return 1;
}

int main() {
    int n;
    printf("Enter the size of the chessboard: ");
    scanf("%d", &n);

    if (n < 1) {
        printf("Invalid board size.\n");
        return 1;
    }
   displaySolution(n);
    return 0;
}
