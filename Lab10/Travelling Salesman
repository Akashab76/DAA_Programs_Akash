#include <stdio.h>
#include <stdlib.h>
#define MAX 10

int tsp_g[MAX][MAX]; 
int visited[MAX], n, cost = 0;

void travellingsalesman(int c) {
    int k, adj_vertex = -1;
    int min = 999;

    visited[c] = 1;

    printf("%d ", c + 1);

    for (k = 0; k < n; k++) {
        if (tsp_g[c][k] != 0 && !visited[k]) {
            if (tsp_g[c][k] < min) {
                min = tsp_g[c][k];
                adj_vertex = k;
            }
        }
    }

    if (adj_vertex == -1) {
        // Return to start city
        cost += tsp_g[c][0];
        printf("%d", 1); // return to starting city
        return;
    }

    cost += min;
    travellingsalesman(adj_vertex);
}

int main() {
    int i, j;
    printf("Enter the number of cities (max %d): ", MAX);
    scanf("%d", &n);

    if (n > MAX || n < 2) {
        printf("Invalid number of cities. Exiting.\n");
        return 1;
    }

    printf("Enter the cost matrix (use 0 if no path):\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            printf("Cost from city %d to city %d: ", i + 1, j + 1);
            scanf("%d", &tsp_g[i][j]);
        }
    }

    for (i = 0; i < n; i++)
        visited[i] = 0;

    printf("\nShortest Path: ");
    travellingsalesman(0); 

    printf("\nMinimum Cost: %d\n", cost);
    return 0;
}
